{"version":3,"sources":["page/create/Create.js","page/join/Join.js","page/test/Test.js","page/view/View.js","App.js","serviceWorker.js","index.js"],"names":["Create","props","useState","channel","setChannel","member","setMember","room","setRoom","troom","setTRoom","lname","setLName","fname","setFName","mname","setMName","socket","socketIOClient","chatid","Math","random","useEffect","on","data","name","addResponseMessage","message","alert","prevMember","className","class","style","width","type","value","onChange","e","target","onClick","emit","href","xmlns","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","d","points","aria-label","cx","cy","r","x1","y1","x2","y2","map","i","key","role","handleNewUserMessage","position","title","subtitle","badge","Join","Test","View","history","setHistory","console","log","overflowY","maxHeight","join","textAlign","fontSize","Date","date","toLocaleDateString","weekday","year","month","day","moderator","Fragment","scope","messages","m","toString","split","splice","App","path","render","Component","withRouter","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d3c617f8.chunk.js","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport socketIOClient from 'socket.io-client';\n\nconst Create = (props) => {\n  const [channel, setChannel] = useState('none');\n  const [member, setMember] = useState([]);\n  const [room, setRoom] = useState('');\n  const [troom, setTRoom] = useState(true);\n  const [lname, setLName] = useState('');\n  const [fname, setFName] = useState('');\n  const [mname, setMName] = useState('');\n\n  const socket = socketIOClient('http://127.0.0.1:2802');\n  const chatid = Math.random();\n\n  useEffect(() => {\n    socket.on('CHAT_MESSAGE', data => {\n      if (data.room === channel && channel !== 'none') {\n        if (data.chatid !== chatid && data.name !== lname + ', ' + fname + ' ' + mname) {\n          addResponseMessage(data.name + ' : ' + data.message);\n        }\n      }\n    });\n    socket.on('JOIN_MESSAGE', data => {\n      alert('join' + data.room + '-' + data.name + '-' + data.chatid);\n      if (data.room === channel && channel !== 'none') {\n        if (data.chatid !== chatid) {\n          setMember(prevMember => [...prevMember, data.name]);\n        }\n      }\n    });\n  },[channel]);\n\n  const handleMessage = (message) => {\n    socket.emit('CHAT_MESSAGE', { room, message, name: lname + ', ' + fname + ' ' + mname, chatid });\n  }\n\n  return (\n    <Fragment>\n      { (channel === 'none') ?\n        <div className='container d-flex vh-100 p-3 mx-auto flex-column'>\n          <header className='mb-auto'></header>\n          <main>\n            <div class=\"card mx-auto\" style={{width: '28rem'}}>\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">Create Room</h5>\n                <div class=\"form-group\">\n                  <label>Room</label>\n                  <input type=\"text\" class=\"form-control\" value={room} onChange={(e)=>{setRoom(e.target.value)}} />\n                  <small class=\"form-text text-muted\">Share this code. To let them join the chat.</small>\n                </div>\n                <div class=\"form-group\">\n                  <label>Last Name</label>\n                  <input type=\"text\" class=\"form-control\" value={lname} onChange={(e)=>{setLName(e.target.value)}} />\n                </div>\n                <div class=\"form-group\">\n                  <label>First Name</label>\n                  <input type=\"text\" class=\"form-control\" value={fname} onChange={(e)=>{setFName(e.target.value)}} />\n                </div>\n                <div class=\"form-group\">\n                  <label>Middle Name</label>\n                  <input type=\"text\" class=\"form-control\" value={mname} onChange={(e)=>{setMName(e.target.value)}} />\n                </div>\n                { (lname !== '' && fname !== '' && mname !== '' && room !== '') ?\n                  <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setChannel(room);setMember(prevMember => [...prevMember, lname + ', ' + fname + ' ' + mname]);socket.emit('CONVO_CREATED', { room, name: lname + ', ' + fname + ' ' + mname, chatid });}}>Create Room</button>\n                : null }\n              </div>\n            </div>\n          </main>\n          <footer className='mt-auto'></footer>\n        </div> :       \n        <div class=\"container-fluid vh-100\">\n          <div class=\"row\">\n            <nav class=\"col-md-2 d-none d-md-block bg-light sidebar p-2\">\n              <div class=\"sidebar-sticky\">\n                <ul class=\"nav flex-column\">\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link active\" href=\"#\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-home\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\n                      Room: {channel}\n                    </a>\n                  </li>\n                  {/* <li class=\"nav-item\">\n                    <a class=\"nav-link\" href=\"#\">\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-layers\"><polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon><polyline points=\"2 17 12 22 22 17\"></polyline><polyline points=\"2 12 12 17 22 12\"></polyline></svg>\n                      Integrations\n                    </a>\n                  </li> */}\n                </ul>\n        \n                <h6 class=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n                  <span>Room Members</span>\n                  <a class=\"d-flex align-items-center text-muted\" href=\"#\" onClick={()=>{setTRoom(!troom)}} aria-label=\"Add a new report\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line></svg>\n                  </a>\n                </h6>\n                {\n                  troom ?\n                    <ul class=\"nav flex-column mb-2\">\n                      { member.map((e,i)=>(\n                        <li class=\"nav-item\">\n                          <a class=\"nav-link\" href=\"#\" key={'mem'+i}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-users\"><path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path><circle cx=\"9\" cy=\"7\" r=\"4\"></circle><path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path><path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path></svg>\n                            {e}\n                          </a>\n                        </li>\n                      ))}\n                      {/* <li class=\"nav-item\">\n                        <a class=\"nav-link\" href=\"#\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-file-text\"><path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path><polyline points=\"14 2 14 8 20 8\"></polyline><line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line><line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line><polyline points=\"10 9 9 9 8 9\"></polyline></svg>\n                          Year-end sale\n                        </a>\n                      </li> */}\n                    </ul>\n                  : null\n                }\n                </div>\n            </nav>\n        \n            <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4 vh-100\">   \n            <Widget \n              handleNewUserMessage={ handleMessage }\n              style={{ position: 'absolute' }}\n              title='Cavite State University'\n              subtitle='lab'\n              badge={ 1 } />\n            </main>\n          </div>\n        </div>\n      }\n\n    </Fragment>\n  );\n}\n\nexport default Create;","import React, { useState, useEffect, Fragment } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport socketIOClient from 'socket.io-client';\n\nconst Join = (props) => {\n  const [channel, setChannel] = useState('none');\n  const [room, setRoom] = useState('');\n  const [lname, setLName] = useState('');\n  const [fname, setFName] = useState('');\n  const [mname, setMName] = useState('');\n\n  const socket = socketIOClient('http://127.0.0.1:2802');\n  const chatid = Math.random();\n\n  useEffect(() => {\n    socket.on('CHAT_MESSAGE', data => {\n      if (data.room === channel && channel !== '') {\n        if (data.chatid !== chatid) {\n          addResponseMessage(data.name + ' : ' + data.message);\n        }\n      }\n    });\n  },[channel]);\n\n  const handleMessage = (message) => {\n    socket.emit('CHAT_MESSAGE', { room, message, name: lname + ', ' + fname + ' ' + mname, chatid });\n  }\n\n  const joinChannel = (name) => {\n    socket.emit('JOIN_MESSAGE', { room, name, chatid });\n  }\n\n  return (\n    <Fragment>\n      { (channel === 'none') ?\n        <div className='container d-flex vh-100 p-3 mx-auto flex-column'>\n          <header className='mb-auto'></header>\n          <main>\n            <div class=\"card mx-auto\" style={{width: '28rem'}}>\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">Join Room</h5>\n                <div class=\"form-group\">\n                  <label>Room</label>\n                  <input type=\"text\" class=\"form-control\" value={room} onChange={(e)=>{setRoom(e.target.value)}} />\n                  <small class=\"form-text text-muted\">Paste the code to join the chat.</small>\n                </div>\n                <div class=\"form-group\">\n                  <label>Last Name</label>\n                  <input type=\"text\" class=\"form-control\" value={lname} onChange={(e)=>{setLName(e.target.value)}} />\n                </div>\n                <div class=\"form-group\">\n                  <label>First Name</label>\n                  <input type=\"text\" class=\"form-control\" value={fname} onChange={(e)=>{setFName(e.target.value)}} />\n                </div>\n                <div class=\"form-group\">\n                  <label>Middle Name</label>\n                  <input type=\"text\" class=\"form-control\" value={mname} onChange={(e)=>{setMName(e.target.value)}} />\n                </div>\n                { (lname !== '' && fname !== '' && mname !== '' && room !== '') ?\n                  <button type=\"button\" class=\"btn btn-primary\" onClick={()=>{setChannel(room);joinChannel(lname + ', ' + fname + ' ' + mname)}}>Join Room</button>\n                : null }\n              </div>\n            </div>\n          </main>\n          <footer className='mt-auto'></footer>\n        </div> :       \n        <div style={{\n          position: 'relative',\n          width: '100vw',\n          height: '100vh'\n        }}>\n          <Widget \n            handleNewUserMessage={ handleMessage }\n            style={{ position: 'absolute' }}\n            title='Cavite State University'\n            subtitle='lab'\n            badge={ 1 } />\n        </div>\n      }\n\n    </Fragment>\n  );\n}\n\nexport default Join;","import React, { useEffect, Fragment } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport socketIOClient from 'socket.io-client';\n\nconst Test = (props) => {\n  const socket = socketIOClient('http://127.0.0.1:2802');\n  const chatid = Math.random();\n\n  useEffect(() => {\n    socket.on('CHAT_MESSAGE', data => {\n      if (data.room === 'rizza') {\n        if (data.chatid !== chatid) {\n          addResponseMessage(data.message);\n        }\n      }\n    });\n  },[]);\n\n  const handleMessage = (message) => {\n    socket.emit('CHAT_MESSAGE', { room: 'rizza', message, name: 'Jon Angelo Comia', chatid });\n  }\n\n  return (\n    <Fragment>\n      <div style={{\n        position: 'relative',\n        width: '100vw',\n        height: '100vh'\n      }}>\n        <Widget \n          handleNewUserMessage={ handleMessage }\n          style={{ position: 'absolute' }}\n          title='Cavite State University'\n          subtitle='lab'\n          badge={ 1 } />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default Test;","import React, { useState, useEffect, Fragment } from 'react';\nimport { Widget, addResponseMessage } from 'react-chat-widget';\nimport socketIOClient from 'socket.io-client';\n\nconst View = (props) => {\n  const [history, setHistory] = useState([]);\n  const [troom, setTRoom] = useState(true);\n  const [channel, setChannel] = useState('');\n\n  const socket = socketIOClient('http://127.0.0.1:2802');\n  const chatid = Math.random();\n\n  useEffect(() => {\n    socket.emit('LOAD_DATA', {});\n    socket.on('LOAD_DATA', data => {\n      console.log({ data });\n      setHistory(data.history);\n    });\n  },[ ]);\n\n  return (\n    <Fragment>    \n      <div class=\"container-fluid vh-100\">\n        <div class=\"row\">\n          <nav class=\"col-md-2 d-none d-md-block bg-light sidebar p-2\">\n            <div class=\"sidebar-sticky\">\n              <ul class=\"nav flex-column\">\n                <li class=\"nav-item\">\n                  <a class=\"nav-link active\" href=\"#\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-layers\"><polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon><polyline points=\"2 17 12 22 22 17\"></polyline><polyline points=\"2 12 12 17 22 12\"></polyline></svg>\n                    HISTORY\n                  </a>\n                </li>\n                {/* <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"#\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-layers\"><polygon points=\"12 2 2 7 12 12 22 7 12 2\"></polygon><polyline points=\"2 17 12 22 22 17\"></polyline><polyline points=\"2 12 12 17 22 12\"></polyline></svg>\n                    Integrations\n                  </a>\n                </li> */}\n              </ul>\n      \n              <h6 class=\"sidebar-heading d-flex justify-content-between align-items-center px-3 py-2 mt-4 mb-1 text-muted\">\n                <span>Room List</span>\n                <a class=\"d-flex align-items-center text-muted\" href=\"#\" onClick={()=>{setTRoom(!troom)}} aria-label=\"Add a new report\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-plus-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line></svg>\n                </a>\n              </h6>\n              <div style={{overflowY: 'scroll',maxHeight: '70vh'}}>\n              {\n                troom ?\n                  <ul class=\"nav flex-column mb-2\">\n                    { history.map((data,i)=>(\n                      <li class=\"nav-item px-3 py-2\">\n                        <button key={'button' + i}\n                          className={\n                            [\n                              'btn btn-block', \n                              channel === data.room ? 'btn-success' : 'btn-outline-success'\n                            ].join(' ')\n                          } \n                          onClick={\n                            () => { setChannel(data.room) }\n                          }\n                          style={{\n                            textAlign: 'left',\n                            fontSize: '12px'\n                          }}>\n                            <strong>DATE:</strong><br/> \n                            &nbsp;{(new Date(data.date)).toLocaleDateString('en-US', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' })}<br/>\n                            <strong>ROOM:</strong><br/> \n                            &nbsp;{data.room}<br/>\n                            <strong>MODERATOR:</strong><br/> \n                            &nbsp;{data.moderator}<br/>\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                : null\n              }\n              </div>\n            </div>\n          </nav>\n      \n          <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4 vh-100\" style={{overflowY: 'scroll'}}>   \n            { channel !== '' ?\n              <React.Fragment>\n                { history.map((data)=>(\n                  <React.Fragment>\n                    { channel === data.room ?\n                      <table class=\"table\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">DATE</th>\n                            <th scope=\"col\">NAME</th>\n                            <th scope=\"col\">MESSAGE</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          { data.messages.map((message,m)=>(\n                            <tr key={'message'+m}>\n                              <th scope=\"row\">{(new Date(message.date)).toString().split(' ').splice(0, 5).join(' ')}</th>\n                              <td>{message.name}</td>\n                              <td>{message.message}</td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table> : null\n                    }\n                  </React.Fragment>\n                ))}\n              </React.Fragment> : null\n            }\n          </main>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default View;","import React, { Component, Fragment } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\nimport 'react-chat-widget/lib/styles.css';\nimport './App.css'\n\nimport Create from './page/create/Create';\nimport Join from './page/join/Join';\nimport Test from './page/test/Test';\nimport View from './page/view/View';\n\nclass App extends Component {\n  render () {\n    return (\n      <Fragment>\n        <Switch>\n          <Route path='/create' render={ () => <Create { ...this.props } /> } />\n          <Route path='/join' render={ () => <Join { ...this.props } /> } />\n          <Route path='/view' render={ () => <View { ...this.props } /> } />\n          <Route path='/' render={ () => <Test { ...this.props } /> } />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport 'react-chat-widget/lib/styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}